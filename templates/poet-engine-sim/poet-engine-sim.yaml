apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-poet-engine-sim
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-poet-engine-sim
    spec:
      containers:
      - name: {{ .Release.Name }}-validator
        image: {{ .Values.validator.image.repository }}:{{ .Values.validator.image.tag }}
        command:
        - bash
        args:
        - -c
        - "
{{- if .Values.validator.genesis }}
          if [ ! -f /poet-shared/poet-enclave-measurement ]; then \
             poet enclave measurement >> /poet-shared/poet-enclave-measurement; \
           fi && \
           if [ ! -f /poet-shared/poet-enclave-basename ]; then \
             poet enclave basename >> /poet-shared/poet-enclave-basename; \
           fi && \
           if [ ! -f /poet-shared/simulator_rk_pub.pem ]; then \
             cp /etc/sawtooth/simulator_rk_pub.pem /poet-shared; \
           fi && \
           while [ ! -f /poet-shared/sawtooth-0/keys/validator.priv ]; do \
             echo 'waiting for validator key'; \
             sleep 1; \
           done && \
           cp -a /poet-shared/sawtooth-0/keys /etc/sawtooth && \
           if [ ! -f /poet-shared/poet.batch ]; then \
             echo 'create poet.batch';
             poet registration create -k /etc/sawtooth/keys/validator.priv -o /poet-shared/poet.batch && \
             echo 'created poet.batch';
           fi && \
{{ end }}
           poet-engine -C tcp://{{ .Release.Name }}-validator:5050 --component tcp://{{ .Release.Name }}-validator:4004"
      volumeMounts:
        - name: sawtooth-data
          mountPath: "/poet-shared"
          subPath: poet-shared
      volumes:
      - name: sawtooth-data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.claimName }}